{"version":3,"sources":["components/Header.js","components/Education.js","components/ExperienceCard.js","components/ExperienceInput.js","components/Experience.js","App.js","index.js"],"names":["Header","props","showForm","className","onSubmit","type","name","value","state","onChange","nameChange","email","emailChange","number","numberChange","bind","e","this","setState","target","preventDefault","prevState","edit","icon","faEdit","onClick","React","Component","Education","school","schoolChange","major","majorChange","graduation","graduationChange","ExperienceCard","title","position","dates","duties","ExperienceInput","passState","titleChange","positionChange","datesChange","dutiesChange","editState","id","rows","cols","Experience","experience","map","item","key","exp","obj","Object","assign","App","gradDate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7660fafd.chunk.js","sourcesContent":["import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit} from '@fortawesome/free-solid-svg-icons'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props)\n        this.nameChange = this.nameChange.bind(this)\n        this.emailChange = this.emailChange.bind(this)\n        this.numberChange = this.numberChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.state = {\n            showForm: false,\n            name: \"Christian Name\",\n            email: \"christian@mail.com\",\n            number: \"800-445-6685\"\n        }\n    }\n\n    showForm = () => {\n        return (\n            <div>\n                <form className=\"header-form\" onSubmit={this.onSubmit}>\n                    <label>\n                        Name:\n                        <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.nameChange}/>\n                    </label>\n                    <label>\n                        Email:\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.emailChange} />\n                    </label>\n                    <label>\n                        Number:\n                        <input type=\"text\" name=\"number\" value={this.state.number} onChange={this.numberChange}/>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n\n    nameChange(e) {\n        this.setState({ name: e.target.value })\n    }\n\n    emailChange(e) {\n        this.setState({ email: e.target.value })\n    }\n\n    numberChange(e) {\n        this.setState({ number: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.setState(prevState => ({\n            name: prevState.name,\n            email: prevState.email,\n            number: prevState.number,\n            showForm: false,\n        }))\n    }\n\n    render() {\n        const edit = <FontAwesomeIcon icon={faEdit} />\n        const {name, email, number} = this.state;\n        return (\n            <div className=\"header\">\n                <div className=\"section\">\n                    <div className=\"name\">{name}</div>\n                    <div className=\"edit\" onClick={() => this.setState({showForm: true})}>{edit}</div>\n                </div>\n                <div className=\"email\">{email}</div>\n                <div className =\"phone\">{number}</div>\n                {this.state.showForm ? this.showForm() : null}\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit} from '@fortawesome/free-solid-svg-icons'\n\nclass Education extends React.Component {\n    constructor(props) {\n        super(props)\n        this.schoolChange = this.schoolChange.bind(this)\n        this.majorChange = this.majorChange.bind(this)\n        this.graduationChange = this.graduationChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.state = {\n            school: \"The King's College\",\n            major: \"Business\",\n            graduation: \"06/2022\",\n            showForm: false\n        }\n    }\n\n    showForm = () => {\n        return (\n            <div>\n                <form className=\"education-form\" onSubmit={this.onSubmit}>\n                    <label>\n                        School:\n                        <input type=\"text\" name=\"school\" value={this.state.school} onChange={this.schoolChange}/>\n                    </label>\n                    <label>\n                        Major:\n                        <input type=\"text\" name=\"major\" value={this.state.major} onChange={this.majorChange} />\n                    </label>\n                    <label>\n                        Graduation Date:\n                        <input type=\"text\" name=\"graduation\" value={this.state.graduation} onChange={this.graduationChange}/>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n\n    schoolChange(e) {\n        this.setState({ school: e.target.value })\n    }\n\n    majorChange(e) {\n        this.setState({ major: e.target.value })\n    }\n\n    graduationChange(e) {\n        this.setState({ graduation: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.setState(prevState => ({\n            school: prevState.school,\n            major: prevState.major,\n            graduation: prevState.graduation,\n            showForm: false,\n        }))\n    }\n\n\n    render() {\n        const edit = <FontAwesomeIcon icon={faEdit} />\n        const { school, major, graduation } = this.state\n        return (\n            <div className=\"education\">\n                <div className=\"section\">\n                    <div className=\"section-title\">Education</div>\n                    <div className=\"edit\" onClick={() => this.setState({showForm: true})}>{edit}</div>\n                </div>\n                {this.state.showForm ? this.showForm() : null}\n                <div className=\"education-content\">\n                <div className=\"leftside\">\n                    <div className=\"school\">{school} -</div>\n                    <div className=\"major\">{major}</div>\n                </div>\n                    <div className=\"graduation\">{graduation}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Education;","import React from 'react';\n\nclass ExperienceCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"experienceCard\">\n                <div className=\"experienceCardContent\">\n                    <div className=\"split-content\">\n                    <div className=\"left-side\">\n                        <div className=\"title\">{this.props.title} -</div> \n                        <div className=\"position\">{this.props.position}</div>\n                    </div>\n                        <div className=\"dates\">{this.props.dates}</div>\n                    </div>\n                    <div className=\"duties\">{this.props.duties}</div>  \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ExperienceCard;","import React from 'react';\n\nclass ExperienceInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: this.props.id,\n            title: this.props.title,\n            position: this.props.position,\n            dates: this.props.dates,\n            duties: this.props.duties\n        }\n    }\n\n    passState = () => {\n        this.props.titleChange(this.state)\n        this.props.positionChange(this.state)\n        this.props.datesChange(this.state)\n        this.props.dutiesChange(this.state)\n    }\n\n    editState = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        }, () => this.passState())\n    }\n\n    render() {\n        const { title, position, dates, duties } = this.state\n        return (\n            <div className=\"form-chunk\">\n            <label>\n                Company:\n                <input type=\"text\" name=\"title\" value={title} onChange={this.editState}/>\n            </label>\n            <label>\n                Job Title:\n                <input type=\"text\" name=\"position\" value={position} onChange={this.editState} />\n            </label>\n            <label>\n                Job Tenure:\n                <input type=\"text\" name=\"dates\" value={dates} onChange={this.editState}/>\n            </label>\n            <label>\n                Job Duties:\n                <textarea name=\"duties\" rows=\"4\" cols=\"50\" value={duties} onChange={this.editState}/>\n            </label>\n        </div>\n        )\n    }\n}\n\nexport default ExperienceInput;","import React from 'react';\nimport ExperienceCard from './ExperienceCard';\nimport ExperienceInput from './ExperienceInput';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit} from '@fortawesome/free-solid-svg-icons'\n\nclass Experience extends React.Component {\n    constructor(props) {\n        super(props)\n        this.titleChange = this.titleChange.bind(this)\n        this.positionChange = this.positionChange.bind(this)\n        this.datesChange = this.datesChange.bind(this)\n        this.dutiesChange = this.dutiesChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.state = {\n            showForm: false,\n            experience: [{id: 1, title: \"Wells Fargo\", position: \"Personal Banker\", dates: \"02/2016 - 02/2018\", duties: \"Build relationships with current clients\"},\n            {id: 2, title: \"Company Title\", position: \"Position\", dates: \"Length of Employment\", duties: \"Put Duties Here\"},\n            {id: 3, title: \"Company Title\", position: \"Position\", dates: \"Length of Employment\", duties: \"Put Duties Here\"}]   \n        }\n    }\n\n    titleChange(exp) {\n        this.setState(prevState => ({\n            showForm: prevState.showForm,\n            experience: prevState.experience.map(\n                obj => (obj.id === exp.id ? Object.assign(obj, {title: exp.title}) : obj)\n            )\n        }));\n    }\n\n    positionChange(exp) {\n        this.setState(prevState => ({\n            showForm: prevState.showForm,\n            experience: prevState.experience.map(\n                obj => (obj.id === exp.id ? Object.assign(obj, {position: exp.position}) : obj)\n            )\n        }));\n    }\n\n\n    datesChange(exp) {\n        this.setState(prevState => ({\n            showForm: prevState.showForm,\n            experience: prevState.experience.map(\n                obj => (obj.id === exp.id ? Object.assign(obj, {dates: exp.dates}) : obj)\n            )\n        }));\n    }\n\n\n    dutiesChange(exp) {\n        this.setState(prevState => ({\n            showForm: prevState.showForm,\n            experience: prevState.experience.map(\n                obj => (obj.id === exp.id ? Object.assign(obj, {duties: exp.duties}) : obj)\n            )\n        }));\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.setState({showForm: false})\n    }\n\n    showForm = () => {\n        return (\n            <div>\n                <form className=\"experience-form\" onSubmit={this.onSubmit}>\n                    {this.state.experience.map(item => {\n                        return <ExperienceInput key={item.id} id={item.id} title={item.title} position={item.position} dates={item.dates} duties={item.duties}\n                        titleChange={this.titleChange} positionChange={this.positionChange} datesChange={this.datesChange} dutiesChange={this.dutiesChange} />\n                    })}\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }  \n\n    render() {\n        const edit = <FontAwesomeIcon icon={faEdit} />\n        return (\n            <div className=\"experience\">\n                <div className=\"section\">\n                    <div className=\"section-title\">Experience</div>\n                    <div className=\"edit\" onClick={() => this.setState({showForm: true})}>{edit}</div>\n                </div>\n                {this.state.showForm ? this.showForm() : null}\n                {this.state.experience.map(obj => \n                    <ExperienceCard key={obj.id} title={obj.title} position={obj.position} dates={obj.dates} duties={obj.duties} />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Experience","import React from 'react';\nimport Header from './components/Header';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: \"\",\n      email: \"\",\n      number: \"\",\n      school: \"\",\n      gradDate: \"\",\n      experience: [],\n      showForm: false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <div className=\"cv-container\">\n          <Header  />\n          <Education />\n          <Experience />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/main.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}